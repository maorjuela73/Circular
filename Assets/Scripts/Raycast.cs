using System.Collections;using System.Collections.Generic;using UnityEngine;public class Raycast : MonoBehaviour {    public float distanceRay = 10f;        public Cube interactuable;    public Cube lastCube;    // Use this for initialization    void Start () {			}    // Update is called once per frame    private void Update()    {        Raycasting();        if (interactuable != null)        {            interactuable.Over();            lastCube = interactuable;        }        else if (lastCube != null)        {            lastCube.Exit();            lastCube = null;        }        //if (interactuable && interactuable != lastCube)        //{        //    interactuable.Over();        //}        //if (interactuable != lastCube)        //{        //    lastCube = interactuable;        //    if (lastCube == null)        //    {        //        return;        //    }        //    interactuable.Exit();        //    lastCube = null;        //}        //else        //{        //    lastCube = null;        //}    }    void Raycasting ()    {        Ray ray = new Ray(transform.position, transform.TransformDirection(Vector3.forward));        RaycastHit hit;        if (Physics.Raycast(ray, out hit, distanceRay))        {            //Debug.DrawLine(transform.position, transform.TransformDirection(Vector3.forward) * distanceRay, Color.green);            Debug.DrawLine(transform.position, transform.position + Vector3.forward * distanceRay, Color.green);            interactuable = hit.collider.GetComponent<Cube>();        }        else        {            Debug.DrawLine(transform.position, transform.position + Vector3.forward * distanceRay, Color.blue);            interactuable = null;        }    }}